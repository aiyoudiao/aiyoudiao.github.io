(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{398:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("围绕 React 衍生出的思考有：声明式与命令式开发、与其它框架并存、组件式的开发（组件化）、单向数据流、视图层的框架、函数式编程。\n还有副作用、纯函数、Thunk函数、promise、genarator、iterator 等等。")]),t._v(" "),s("p",[t._v("上篇文章中整了一个todolist应用练练手，后面也对他进行了优化。接下来说点深入一点的东西，比如怎么调试，类型校验，虚拟dom和diff，生命周期，以及使用工具来进行接口mock，css过渡动画，单、多元素过渡动画等等。")]),t._v(" "),s("h2",{attrs:{id:"安装-react-开发调试工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-react-开发调试工具"}},[t._v("#")]),t._v(" 安装 React 开发调试工具")]),t._v(" "),s("p",[t._v("下载 "),s("code",[t._v("React Developer Tools")]),t._v(" 插件 然后放到 Chrome 浏览器中去，在开发环境下使用这个插件，这个插件的图标会显示"),s("code",[t._v("红色")]),t._v("。如果你的页面不是 React 开发的，那么图标会显示"),s("code",[t._v("灰色")]),t._v("如果是线上的环境，那么图标会显示为"),s("code",[t._v("黑色")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"使用-react-开发调试工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-react-开发调试工具"}},[t._v("#")]),t._v(" 使用 React 开发调试工具")]),t._v(" "),s("p",[t._v("打开开发人员工具，选择 React 选项卡，这时候就可以看到页面标签以 React 组件的方式显示。"),s("br"),t._v("\n使用这个组件来调试组件间传值的时候，就不需要使用 console.log()来打印了。只需要点击这个组件，然后在右侧实时的监控整个组件的状态即可。")]),t._v(" "),s("h2",{attrs:{id:"proptypes-与-defaultprops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proptypes-与-defaultprops"}},[t._v("#")]),t._v(" PropTypes 与 DefaultProps")]),t._v(" "),s("p",[t._v("对传递过来的属性的类型做校验，如果不符合要求，就会自动警告，用来限制传值时的数据类型，对开发是比较友好的。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你要下载这个模块儿，然后才能引入，脚手架工具中自带了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PropTypes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prop-types'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对当前组件.props属性 使用 组件.propTypes 的数据类型进行校验")]),t._v("\nTodoItem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("propTypes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*表示传递过来的content属性一定要是string类型*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 一定要是一个函数 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    deleteItem"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 一定要是一个数字*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 表示传递过来的test属性一定要是string类型的，并且这个test参数必须传递过来了，否则就警告*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isReuqired"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*表示test2 必须是一个数组，数组的组成内容可以一个string类型或者number类型*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    test2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*表示test3 必须是一个string类型或者number类型*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    test3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("oneOfType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PropTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给当前组件.props中的成员设置默认值")]),t._v("\nTodoItem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultProps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"props-state-与-render-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props-state-与-render-函数"}},[t._v("#")]),t._v(" Props,State 与 render 函数")]),t._v(" "),s("p",[t._v("当组件的 state 或者 props 发生改变的时候，组件的 render 函数就会重新执行。"),s("br"),t._v("\n实际"),s("code",[t._v("原理")]),t._v("还是 "),s("code",[t._v("setState")]),t._v("方法"),s("code",[t._v("被调用")]),t._v("了，然后执行了"),s("code",[t._v("re-render")]),t._v("(patch)的方法，重新渲染页面的组件。")]),t._v(" "),s("h2",{attrs:{id:"什么是虚拟-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是虚拟-dom"}},[t._v("#")]),t._v(" 什么是虚拟 DOM")]),t._v(" "),s("p",[t._v("state 数据，JSX 模板。数据+模板 结合，生成虚拟 DOM ，由虚拟 DOM 生成真实 DOM 来显示。"),s("br"),t._v("\nstate 发生改变，数据+模板 结合，生成新虚拟 DOM ，对比之前的旧的虚拟 DOM，找出差异点，不是整版替换，而是经过新旧虚拟 DOM 节点对比。"),s("br"),t._v("\n由框架直接操作 DOM，将变化的旧节点的 DOM 替换成新的节点的 DOM。"),s("br"),t._v("\n虚拟 DOM 就是使用 JS 模拟 DOM，目的是为了提升性能，因为直接操作太消耗性能，一个 DOM 对象有几百个成员，这样会造成进行节点对比的时候极大的损耗性能。")]),t._v(" "),s("h2",{attrs:{id:"深入了解虚拟-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入了解虚拟-dom"}},[t._v("#")]),t._v(" 深入了解虚拟 DOM")]),t._v(" "),s("p",[t._v("JSX 语法其实是虚拟 dom 创建的语法糖，最后会被统一的转换为"),s("code",[t._v("React.createElement()")]),t._v("方法，这个方法创建虚拟 dom。"),s("br"),t._v("\n因为虚拟 DOM 所以性能提升了，它使得跨端应用得以实现，如 React Native。"),s("br"),t._v("\n在 React Native 中让虚拟 DOM 不去生成真实的 DOM 而是生成一些原生的组件，那么就能实现很好的重用了，这样就能够让 React 即能生成网页应用，也能够生成原生应用。")]),t._v(" "),s("h2",{attrs:{id:"虚拟-dom-中的-diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-中的-diff-算法"}},[t._v("#")]),t._v(" 虚拟 DOM 中的 Diff 算法")]),t._v(" "),s("p",[t._v("调用 setState 才会让数据发生变化，setState 是异步，这么做是为了提升性能。"),s("br"),t._v("\n如果你连续调用三次 setState，那么 React 会将三次操作合并成一次，然后再去调用 re-render 的方法渲染页面，这也是为什么 setState 是异步的原因。"),s("br"),t._v("\n同层虚拟 DOM 比较，从上往下进行比较，找到差异之后去更新真实的 DOM，如果有一层有差异就不会往下比较了，这样比对的速度非常快。")]),t._v(" "),s("h3",{attrs:{id:"key-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-属性"}},[t._v("#")]),t._v(" key 属性")]),t._v(" "),s("p",[t._v("key 属性的设置，就是给虚拟 dom 的节点设置名字。")]),t._v(" "),s("p",[t._v("假如有一个数组，原来里面有五个数据，如果你又增加了一个数据，这时候你如果要新旧虚拟 dom 节点进行对比，就会出现双层 for 循环的对比方式了。"),s("br"),t._v("\n这样很麻烦，如果你设置了 key 属性，那么就直接遍历 key 值相同的进行对比，这样就只是单重 for 循环的对比了。"),s("br"),t._v("\n这样就只用把新增加的数据添加到 ul 的 dom 中就可以了。所以不要把 key 属性的值设置为 index，那样没法保证原始的虚拟 dom 节点的 key 值与新的虚拟 dom 节点的 key 值一致了。"),s("br"),t._v("\n因为可能会发生数组元素的位置变化，那时候新的虚拟 dom 节点的 key 值是整版替换的，相当于没有设置。"),s("br"),t._v("\n例如 你删除了一个数组元素，然后 key 值等于 index，这时候 key 值相当于整版替换了，因为 index 值是数组元素的全新的下标。"),s("br"),t._v("\nkey 值很不稳定，key 值需要很稳定，例如你将 key 值设置为 item，这样就确定了唯一性。"),s("br"),t._v("\n能不用 index 作为 key 值的时候就不用 index 作为 key 值，key 值的设置是为了提高虚拟 dom 比对的性能。")]),t._v(" "),s("h2",{attrs:{id:"react-中-ref-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-中-ref-的使用"}},[t._v("#")]),t._v(" React 中 ref 的使用")]),t._v(" "),s("p",[t._v("之前需要通过"),s("code",[t._v("e.target")]),t._v("来获取事件源")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleInput")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过事件源的方式获取页面标签了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("现在可以通过 ref 来获取页面中的 dom")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*在页面标签中添加ref*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleInput")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样就能够获取 页面中的指定input了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但是不推荐使用 ref，React 中推荐使用以数据驱动的方式编写代码，不要直接去操作 DOM。"),s("br"),t._v("\nsetState 操作是异步的，如果你在 setState 中清空了输入框的内容，然后再 setState 的下面通过 dom 获取了输入框的内容，这时候就会发现值还没有清空。"),s("br"),t._v("\n因为同步代码会被先执行，异步代码是等同步代码执行完毕后才会执行的。\n虽然你可以通过 setState 的回调函数来使用 dom 实时的获取输入框中的内容，当 setState 异步操作结束后才会去执行回调函数，那时候就能够实时的获取 dom 中的内容了。"),s("br"),t._v("\n但是如果你设置 dom 的内容，会导致对比时出现错误。如果在做一些极其复杂的业务时可以考虑使用，如操作动画时。")]),t._v(" "),s("h2",{attrs:{id:"react-中的生命周期函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-中的生命周期函数"}},[t._v("#")]),t._v(" React 中的生命周期函数")]),t._v(" "),s("p",[t._v("生命周期函数是指在某一个时刻组件会自动调用执行的函数")]),t._v(" "),s("h3",{attrs:{id:"initialization-初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialization-初始化"}},[t._v("#")]),t._v(" Initialization 初始化")]),t._v(" "),s("p",[s("code",[t._v("Initialization")]),t._v("：在组件初始化的时刻自动执行，相当于"),s("code",[t._v("constructor")]),t._v("构造函数里面做一些"),s("code",[t._v("props")]),t._v("和"),s("code",[t._v("state")]),t._v("的设置。")]),t._v(" "),s("h3",{attrs:{id:"mounting-挂载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mounting-挂载"}},[t._v("#")]),t._v(" Mounting 挂载")]),t._v(" "),s("p",[s("code",[t._v("componentWillMount")]),t._v("：在组件即将被挂载到页面的时刻自动执行"),s("br"),t._v(" "),s("code",[t._v("render")]),t._v("：在组件挂载到页面的时刻自动执行"),s("br"),t._v(" "),s("code",[t._v("componentDidMount")]),t._v("：在组件挂载到页面之后的时刻自动执行")]),t._v(" "),s("h3",{attrs:{id:"updation-更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updation-更新"}},[t._v("#")]),t._v(" Updation 更新")]),t._v(" "),s("h4",{attrs:{id:"props-发生变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props-发生变化"}},[t._v("#")]),t._v(" props 发生变化")]),t._v(" "),s("p",[s("code",[t._v("componentWillReceiveProps")]),t._v("：当前子组件第二次及第二次之后接收了父组件传递属性的时刻都会被执行，也就是父组件执行 render 更新操作时，再次给子组件传递属性时会执行这个生命周期函数。"),s("br"),t._v(" "),s("code",[t._v("shouldComponentUpdate")]),t._v("：在组件确定需要更新之前自动执行，需要返回一个 bool 值，这个 bool 值用来确定是否需要更新当前组件，如果返回 false 就不会执行后面的更新操作了，也就是下面的函数都不会再执行了。"),s("br"),t._v(" "),s("code",[t._v("componentWillUpdate")]),t._v("：在组件确定需要更新之后，在组件真正更新之前会自动执行。"),s("br"),t._v(" "),s("code",[t._v("render")]),t._v("：组件真正更新的时刻自动执行，也就是重新渲染 DOM。"),s("br"),t._v(" "),s("code",[t._v("componentDidUpdate")]),t._v("：组件真正更新完成之后会自动执行。")]),t._v(" "),s("h4",{attrs:{id:"states-发生变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#states-发生变化"}},[t._v("#")]),t._v(" states 发生变化")]),t._v(" "),s("p",[s("code",[t._v("shouldComponentUpdate")]),t._v("：在组件确定需要更新之前自动执行，需要返回一个 bool 值，这个 bool 值用来确定是否需要更新当前组件，如果返回 false 就不会执行后面的更新操作了，也就是下面的函数都不会再执行了。"),s("br"),t._v(" "),s("code",[t._v("componentWillUpdate")]),t._v("：在组件确定需要更新之后，在组件真正更新之前会自动执行。"),s("br"),t._v(" "),s("code",[t._v("render")]),t._v("：组件真正更新的时刻自动执行，也就是重新渲染 DOM。"),s("br"),t._v(" "),s("code",[t._v("componentDidUpdate")]),t._v("：组件真正更新完成之后会自动执行。")]),t._v(" "),s("h3",{attrs:{id:"unmounting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unmounting"}},[t._v("#")]),t._v(" Unmounting")]),t._v(" "),s("p",[s("code",[t._v("componentWillUnmount")]),t._v("：在组件在页面上即将被去除的时刻会被执行，比如子组件是一个列表项，你删除这个列表项时就会自动执行这个函数了。")]),t._v(" "),s("h3",{attrs:{id:"整个生命周期-每一个组件都可以有生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整个生命周期-每一个组件都可以有生命周期"}},[t._v("#")]),t._v(" 整个生命周期，每一个组件都可以有生命周期")]),t._v(" "),s("p",[t._v("初始化 "),s("code",[t._v("constructor")]),s("br"),t._v("\n首次挂载组件到页面之前 "),s("code",[t._v("componentWillMount")]),s("br"),t._v("\n首次挂载组件到页面时 "),s("code",[t._v("render")]),s("br"),t._v("\n首次挂载组件到页面之后 "),s("code",[t._v("componentDidMount")]),s("br"),t._v("\n第二次及第二次之后从父组件那里获取 props 时 "),s("code",[t._v("componentWillReceiveProps")]),s("br"),t._v("\n确定是否需要更新组件 "),s("code",[t._v("shouldComponentUpdate")]),s("br"),t._v("\n真正更新组件之前 "),s("code",[t._v("componentWillUpdate")]),s("br"),t._v("\n真正更新组件时 "),s("code",[t._v("render")]),s("br"),t._v("\n真正更新组件之后 "),s("code",[t._v("componentDidUpdate")]),s("br"),t._v("\n组件在页面中被卸载时 "),s("code",[t._v("componentWillUnmount")])]),t._v(" "),s("h2",{attrs:{id:"生命周期函数的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数的使用场景"}},[t._v("#")]),t._v(" 生命周期函数的使用场景")]),t._v(" "),s("p",[t._v("组件继承的"),s("code",[t._v("Component")]),t._v("中默认"),s("code",[t._v("预置")]),t._v("了"),s("code",[t._v("所有")]),t._v("的"),s("code",[t._v("生命周期函数")]),t._v("，"),s("code",[t._v("唯独没有预置render函数")]),t._v("。"),s("br"),t._v(" "),s("code",[t._v("render")]),t._v("函数必须有，因为它用来生成虚拟 DOM 的，没有虚拟 DOM 那就完蛋了。")]),t._v(" "),s("p",[s("code",[t._v("shouldComponentUpdate")]),t._v(" 可以用来父组件"),s("code",[t._v("render")]),t._v("时"),s("code",[t._v("自动")]),t._v("调用"),s("code",[t._v("子")]),t._v("组件的"),s("code",[t._v("render前")]),t._v("的拒绝操作，也就是父组件更新时不更新子组件，子组件只会进行首次渲染。"),s("br"),t._v("\n主要是减少子组件 render 函数的不必要执行，虽然虚拟 dom 的对比比真实 dom 的对比要性能更优，但是减少虚拟 dom 的生成与对比就能够让性能更优。"),s("br"),t._v("\n在拒绝更新操作之前要进行判断，如判断传递过来的 props 是否与当前的 props 不同")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果传递过来的props与当前的props不一样，说明子组件需要更新了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 说明子组件没有重新被渲染的必要")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("constructor")]),t._v(" 可以用来绑定当前方法的作用域，只需要绑定一次即可，"),s("code",[t._v("减少")]),t._v("了"),s("code",[t._v("多次绑定")]),t._v("方法的"),s("code",[t._v("作用域")]),t._v("，这样就可以在事件绑定时不需要每次都"),s("code",[t._v(".bind(this)")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("componentDidMount")]),t._v(" 可以用来存放 ajax 请求，它永远都不会有问题，因为它只会执行一次。其实你也可以放到 constructor 中，因为它也是只执行一次的，但是它里面已经放了很多初始化 props 和 state 的操作。操作 ajax 可以使用 axios")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Axios "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'axios'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Axios"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/todolist'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'success'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bad'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"使用-charles-进行接口数据模拟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-charles-进行接口数据模拟"}},[t._v("#")]),t._v(" 使用 Charles 进行接口数据模拟")]),t._v(" "),s("p",[s("strong",[t._v("使用教程：")])]),t._v(" "),s("p",[t._v("下载 Charles"),s("br"),t._v("\n打开 Charles 后选择选项卡 Tools"),s("br"),t._v("\n选择 Map Local 选项"),s("br"),t._v("\n点击 Add 按钮 设置代理协议、主机、端口、路径"),s("br"),t._v("\n然后选择被代理的文件(json 文件) 点击 ok"),s("br"),t._v("\n之后选中 Enable Map Local 点击 OK 按钮"),s("br"),t._v("\n本次设置完成")]),t._v(" "),s("p",[t._v("它的作用是抓取请求，并且对请求做出处理。它相当于一个中间的代理服务器。"),s("br"),t._v("\n在前端开发的时候，没有这个接口的数据，你可以使用 json 自己模拟这个接口的数据。使用 Charles 来进行模拟。"),s("br"),t._v("\njosn 文件中的对象或者数组，键值对必须使用双引号，单引号会被认为整个对象或者数组是一个字符串。")]),t._v(" "),s("h2",{attrs:{id:"react-的-css-过渡动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-的-css-过渡动画"}},[t._v("#")]),t._v(" React 的 CSS 过渡动画")]),t._v(" "),s("p",[s("strong",[t._v("过渡")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*需要过渡的属性 持续时间 过渡效果类型 延迟时间*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" all 1s ease-in 0s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("动画")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*先定义动画*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" dong")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" dong2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("0%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("100%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*使用动画: 动画名(必写) 持续时间(必写) 执行次数 动画方向 延迟时间 动画类型 结束时的状态*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dong 2s 1 normal 0s ease-in forwards"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"使用-react-transition-group-实现单个元素的动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-react-transition-group-实现单个元素的动画"}},[t._v("#")]),t._v(" 使用 react-transition-group 实现单个元素的动画")]),t._v(" "),s("p",[t._v("先打开"),s("code",[t._v("github")]),t._v(" 搜索这个开源项目"),s("br"),t._v("\n查看 里面对应的文档"),s("br"),t._v("\n使用命令安装："),s("code",[t._v("yarn add react-transition-group")]),t._v("或者"),s("code",[t._v("npm install react-transition-group --save")]),s("br"),t._v("\n使用 "),s("code",[t._v("react-transition-group")]),t._v("中的"),s("code",[t._v("CSSTransition")])]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CSSTransition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-transition-group'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CSSTransition\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  出入场动画设置，通过in的属性值来进行切换 true为入场 false 为出场*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 动画持续时间 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 切换的css类名前缀 css文件中会有对应的类 如.fade-enter */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    classNames"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fade'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 出场动画执行完毕之后 组件就会从页面上被卸载 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    unmountOnExit\n    onExited"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接进行DOM操作")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//el.style.color="#f00";')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("只是一个div")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CSSTransition")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 第一次入场 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-appear")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 第一次入场中 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-appear-active")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" opacity 1s ease-in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*-----------------------------------*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 入场动画执行前的时候  第一个时刻 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-enter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 入场动画在执行的时候 第二个时刻 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-enter-active")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" opacity 1s ease-in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 入场动画完全执行完毕后 第三个时刻*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-enter-done")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*---------------------------*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 出场动画执行前的时候  第四个时刻 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 出场动画在执行的时候 第五个时刻*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-exit-active")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" opacity 1s ease-in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 出场动画完全执行完毕的时候 第六个时刻 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-exit-done")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"使用-react-transition-group-中的-csstransition-有许多特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-react-transition-group-中的-csstransition-有许多特性"}},[t._v("#")]),t._v(" 使用 react-transition-group 中的 CSSTransition 有许多特性")]),t._v(" "),s("p",[t._v("可以切换 css 中定义的类，"),s("code",[t._v("前缀可以改")]),t._v("，"),s("code",[t._v("后缀是固定")]),t._v("的。"),s("br"),t._v(" "),s("code",[t._v("前缀改了")]),t._v("之后，"),s("code",[t._v("CSSTransition")]),t._v("中的"),s("code",[t._v("classNames")]),t._v("也要"),s("code",[t._v("改为新")]),t._v("的"),s("code",[t._v("前缀")]),t._v("名。"),s("br"),t._v(" "),s("code",[t._v(".fade-appear")]),t._v(" 只在第一次入场时自动切换"),s("br"),t._v(" "),s("code",[t._v(".fade-appear-active")]),t._v(" 只在第一次入场中自动切换"),s("br"),t._v(" "),s("code",[t._v(".fade-enter")]),t._v(" 入场前"),s("br"),t._v(" "),s("code",[t._v(".fade-enter-active")]),t._v(" 入场中"),s("br"),t._v(" "),s("code",[t._v(".fade-enter-done")]),t._v(" 入场后"),s("br"),t._v(" "),s("code",[t._v(".fade-exit")]),t._v(" 出场前"),s("br"),t._v(" "),s("code",[t._v(".fade-exit-active")]),t._v(" 出场中"),s("br"),t._v(" "),s("code",[t._v(".fade-exit-done")]),t._v(" 出场后")]),t._v(" "),s("p",[t._v("还可以操作"),s("code",[t._v("JS DOM")]),t._v(" 因为"),s("code",[t._v("CSSTransition")]),t._v("里面"),s("code",[t._v("内置")]),t._v("了许多的"),s("code",[t._v("生命周期钩子")]),t._v("函数，css"),s("code",[t._v("状态类")]),t._v("与下面的"),s("code",[t._v("生命周期钩子函数对应")]),s("br"),t._v(" "),s("code",[t._v("onEnter")]),t._v(" 入场前"),s("br"),t._v(" "),s("code",[t._v("onEntering")]),t._v(" 入场中"),s("br"),t._v(" "),s("code",[t._v("onEntered")]),t._v(" 入场后"),s("br"),t._v(" "),s("code",[t._v("onExit")]),t._v(" 出场前"),s("br"),t._v(" "),s("code",[t._v("onExiting")]),t._v(" 场中"),s("br"),t._v(" "),s("code",[t._v("onExited")]),t._v(" 出场后")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 传进去的参数是 CSSTransition中最外层的DOM */")]),t._v("\n    onExited "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接进行DOM操作")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//el.style.color = "#f00";')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("unmountOnExit")]),t._v("：表示在"),s("code",[t._v("CSSTransition")]),t._v("中的"),s("code",[t._v("出场动画执行完毕后")]),t._v("就"),s("code",[t._v("会从页面中被移除")]),t._v("掉。")]),t._v(" "),s("h2",{attrs:{id:"使用-react-transition-group-实现多个元素间的动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-react-transition-group-实现多个元素间的动画"}},[t._v("#")]),t._v(" 使用 react-transition-group 实现多个元素间的动画")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("react-transition-group")]),t._v("的"),s("code",[t._v("TransitionGroup")]),t._v("配合"),s("code",[t._v("CSSTransition")]),t._v("来"),s("code",[t._v("实现多")]),t._v("个组件的"),s("code",[t._v("动画")]),t._v("效果")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CSSTransition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("TransitionGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-transition-group'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 在外面嵌套一层 TransitionGroup 标签*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransitionGroup")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 每个元素都设置一下 动画，只不过in属性不要了，因为自动为true了*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CSSTransition\n                    timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 持续时间")]),t._v("\n                    classNames "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fade"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换的类前缀")]),t._v("\n                    unmountOnExit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出场时移除这个组件")]),t._v("\n                    appear "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首次入场 是否自动切换 入场动画")]),t._v("\n                    onEntered "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出场后的钩子函数")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接进行DOM操作")]),t._v("\n                        el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CSSTransition")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransitionGroup")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("react调试有专门的浏览器插件。react的props类型校验用的是prop-types。")]),t._v(" "),s("p",[t._v("虚拟dom和diff，这两个也是笔记常见的，我写过一篇实现vdom和diff的文章 "),s("a",{attrs:{href:"https://juejin.cn/post/7084503737213354014",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/7084503737213354014"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("生命周期只是16.4的时候，现在的话，很多生命周期都变了，主要的componentDidMount、shouldComponentUpdate、componentDidUpdate、componentWillUnmount都没变化。react的vdom之前是树，循环加递归的去判断它是否发生变化。现在是fiber链表，循环加打打标记的来判断它是否发生变化。"),s("br"),t._v("\nfiber的diff算法是在render中执行的，为了保证应对fiber的链式渲染，所以render之前的那些方法 比如 componentWillMount、componentWillReceiveProps、componentWillUpdate，它们就不需要了。"),s("br"),t._v("\n因为它可能会在render之前改变state属性，会造成优先级不正确的问题，于是react觉得这些方法会存在风险，所以把它们直接干掉了。不过shouldComponentUpdate保留下来了，它不会改变state。")]),t._v(" "),s("p",[t._v("使用工具来进行接口mock，这个现在有插件可以直接实现，几乎是基于mockjs、webpack-dev-server、express，或者其它更好的工具，但原理大都一样，都是做个中间层代理。"),s("br"),t._v("\ncss过渡 transition、动画 animation，单CSSTransition、多TransitionGroup元素过渡动画等等，都是基于CSS3做的封装，其实也并不难，当然深入会有难度，但是深入得靠自己实践研究了。之后有空的话，我把CSS3的笔记和案例也进行整理做下输出。")])])}),[],!1,null,null,null);s.default=e.exports}}]);