(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{539:function(t,a,s){"use strict";s.r(a);var v=s(18),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"为什么面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么面向对象"}},[t._v("#")]),t._v(" 为什么面向对象")]),t._v(" "),s("p",[t._v("说到为什么要面向对象，自然先说说最入门的面向过程，将面向过程与面向对象进行一下对比。")]),t._v(" "),s("h3",{attrs:{id:"面向过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向过程"}},[t._v("#")]),t._v(" 面向过程")]),t._v(" "),s("p",[t._v("一个人生活，什么事儿都需要自己做，比如说洗衣服这件事儿。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img1@main/2021/06/02/1622611560169-41a16ce7-09bb-4663-9b16-3b8d05675e9a.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),s("p",[t._v("两个人生活，有的事情只需要找个人做就可以了，还是洗衣服这件事儿。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img4@main/2021/06/02/1622605782281-66376fe4-901f-42af-994c-43f13cb0d512.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"二者对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二者对比"}},[t._v("#")]),t._v(" 二者对比")]),t._v(" "),s("p",[t._v("从上面的例子中是不是能看出面向对象和面向对象的特征？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方式")]),t._v(" "),s("th",[t._v("注重点")]),t._v(" "),s("th",[t._v("解决问题的关注点")]),t._v(" "),s("th",[t._v("思维")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("面向过程")]),t._v(" "),s("td",[t._v("一系列详细步骤")]),t._v(" "),s("td",[t._v("都放到解决问题的每一个详细的步骤上面（方法）")]),t._v(" "),s("td",[t._v("思考每一个具体的详细步骤")])]),t._v(" "),s("tr",[s("td",[t._v("面向对象")]),t._v(" "),s("td",[t._v("一系列对象")]),t._v(" "),s("td",[t._v("都放到解决问题需要的一系列对象身上(object)")]),t._v(" "),s("td",[t._v("思考每一个解决问题的对象")])])])]),t._v(" "),s("p",[t._v("从上面的表格中去理解，是不是懂了面向过程和面向对象。")]),t._v(" "),s("blockquote",[s("p",[t._v("面向对象是依赖于面向过程的，"),s("code",[t._v("面向对象的抽象")]),t._v("会将面向过程的详细步骤进行整合处理。\n这种整合方式是根据不同的场景来对很多详细的步骤进行分门别类的进行整理、管理。")])]),t._v(" "),s("h3",{attrs:{id:"举一个栗子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举一个栗子"}},[t._v("#")]),t._v(" 举一个栗子")]),t._v(" "),s("p",[t._v("下馆子吃饭")]),t._v(" "),s("p",[t._v("面向过程：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img15@main/2021/06/02/1622616742191-63e8dfbc-3658-43ae-9973-fe378ee116e8.png",alt:""}})]),t._v(" "),s("p",[t._v("面向对象")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img0@main/2021/06/02/1622616760249-27bc9798-fe59-4c74-9f5e-bb18c893d37d.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[t._v("抽象是对具体的封装，具体是对抽象的实现。")]),t._v(" "),s("li",[t._v("面向过程是 在面向对象不存在的时候 才有的，面向对象是 在面向过程的基础上 才诞生的。")]),t._v(" "),s("li",[t._v("无论面向对象怎么样，最后都需要通过面向过程来实现。")]),t._v(" "),s("li",[t._v("通过面向对象 能够更好的利用 面向过程的逻辑。")]),t._v(" "),s("li",[t._v("通过面向对象 能够使得面向过程的功能 发挥更大的作用。")])]),t._v(" "),s("blockquote",[s("p",[t._v("例1：老板 与 员工（老板的命令 由 员工来实现）。\n例2：领导者 与 属下（领导者的指挥 由 属下来完成）。\n结果：没有员工和属下，就没有老板和领导者。")])]),t._v(" "),s("h2",{attrs:{id:"讲讲设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#讲讲设计模式"}},[t._v("#")]),t._v(" 讲讲设计模式")]),t._v(" "),s("h3",{attrs:{id:"面向对象的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的好处"}},[t._v("#")]),t._v(" 面向对象的好处")]),t._v(" "),s("p",[s("strong",[t._v("封装")]),t._v("\n对代码进行整理，以各种各样的方式整理，如模块儿、组件、类、对象、数组、方法、变量等等。")]),t._v(" "),s("p",[s("strong",[t._v("继承")]),t._v("\n复用已有的代码，如复用已有模块儿、组件、类、 对象、方法、变量 等等。")]),t._v(" "),s("p",[s("strong",[t._v("多态")]),t._v("\n对功能接口进行替换，如 需要什么功能就换什么样的代码，改一处代码就改变了多处发生良好的变化。\n并不是在原先的基础上去修改大部分的源代码，而是新建文件，往这个新文件中加代码，之后修改少部分源代码或者不修改源代码的方式去引用这个新文件中的代码。")]),t._v(" "),s("h3",{attrs:{id:"设计模式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式有哪些"}},[t._v("#")]),t._v(" 设计模式有哪些？")]),t._v(" "),s("h4",{attrs:{id:"创建型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建型"}},[t._v("#")]),t._v(" 创建型")]),t._v(" "),s("p",[t._v("5种：工厂方法、抽象工厂、建造者、原型、单例")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img13@main/2021/06/03/1622692282284-777b0cba-bad5-462f-9f43-4fb47bf19ca8.png",alt:""}})]),t._v(" "),s("p",[t._v("我自己的理解：这类设计模式用于“花式的创建对象”，将对象创建的过程进行封装，将对象的"),s("code",[t._v("创建和使用")]),t._v(" 解耦了。")]),t._v(" "),s("p",[t._v("较官方的理解：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img16@main/2021/06/03/1622692252627-67fbea9e-d23e-4862-aada-5a409261d4bb.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"结构型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构型"}},[t._v("#")]),t._v(" 结构型")]),t._v(" "),s("p",[t._v("7种：适配器、桥接、组合、装饰器、外观、享元、代理")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img6@main/2021/06/03/1622692942322-ab7766c1-e026-4157-9569-6eb6ad021a9b.png",alt:""}})]),t._v(" "),s("p",[t._v("我自己的理解：这类设计模式用于“变着花样地借用花式创建的对象”，组合出一些类和对象之间的"),s("code",[t._v("经典结构")]),t._v("，用于解决特定场景下的经典问题，将类、对象的结构和使用解耦。")]),t._v(" "),s("p",[t._v("较官方的理解：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img4@main/2021/06/03/1622692867204-b2ee477d-693d-481e-8a56-b29c6605214b.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"行为型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行为型"}},[t._v("#")]),t._v(" 行为型")]),t._v(" "),s("p",[t._v("11种：模板方法、命令、迭代器、观察者、中介者、状态、策略、解释器、职责链、备忘录、访问者。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img11@main/2021/06/03/1622694347012-8cdb5896-7428-43c3-a122-1311df7a97d4.png",alt:""}})]),t._v(" "),s("p",[t._v("我自己的理解：这类设计模式用于“实现日常开发中的特殊功能或特殊行为”，汇总了一些类、对象之间的"),s("code",[t._v("经典交互")]),t._v("方式，用于将特定场景下拥有相关行为的类、对象解耦。")]),t._v(" "),s("p",[t._v("较官方的理解：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img19@main/2021/06/03/1622694292129-351e675f-74c5-463d-8964-c8c19192a00d.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"设计模式中的常见关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式中的常见关系"}},[t._v("#")]),t._v(" 设计模式中的常见关系")]),t._v(" "),s("p",[t._v("死记是没有用的噢，我们可以先弄清楚类图的六种关系：依赖关系、关联关系、聚合关系、组合关系、实现关系、泛化关系。\n暂时弄不懂也没关系，先记住它。")]),t._v(" "),s("blockquote",[s("p",[t._v("六种关系中，从弱到强依次是：\n依赖关系 < 关联关系 < 聚合关系 < 组合关系 < 实现关系 = 泛化关系")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img15@main/2021/06/03/1622695200528-97d9be5c-1aaf-46b1-8ccc-95cc54d30346.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img2@main/2021/06/03/1622695266772-65c06528-cbfc-42cf-b138-952f7552bd02.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img16@main/2021/06/03/1622695284103-2dc9d591-0c47-470c-94f4-98c65cb18748.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img15@main/2021/06/03/1622695307054-af8ce934-5cf9-495e-a044-274744e4a022.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img5@main/2021/06/03/1622695386853-6ea70469-7d3a-46dd-8b04-4a513c94a814.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/filess/img10@main/2021/06/03/1622695413614-6e448623-7867-4f16-a3ad-f787edbaf331.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("设计模式中关系大致分为这六种。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);